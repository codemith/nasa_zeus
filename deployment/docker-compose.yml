version: '3.8'

services:
  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    container_name: nasa-zeus-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./nasa_zeus.db}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - OPENAQ_API_KEY=${OPENAQ_API_KEY}
      - EARTHDATA_USERNAME=${EARTHDATA_USERNAME}
      - EARTHDATA_PASSWORD=${EARTHDATA_PASSWORD}
    volumes:
      - ../data:/app/data
    restart: unless-stopped
    mem_limit: 256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nasa-zeus-network

  gemini:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.gemini
    container_name: nasa-zeus-gemini
    ports:
      - "8001:8001"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    volumes:
      - ../data:/app/data
      - ../MACHINE_LEARNING:/app/MACHINE_LEARNING
    depends_on:
      - backend
    restart: unless-stopped  # Changed from "no" - now runs continuously as web server
    mem_limit: 256m
    networks:
      - nasa-zeus-network

  frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.frontend
    container_name: nasa-zeus-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://backend:8000}
      - NEXT_PUBLIC_GEMINI_URL=${NEXT_PUBLIC_GEMINI_URL:-http://gemini:8001}
      - NODE_ENV=production
    depends_on:
      - backend
      - gemini
    restart: unless-stopped
    mem_limit: 256m
    networks:
      - nasa-zeus-network

  # nginx:
  #   image: nginx:alpine
  #   container_name: nasa-zeus-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./deployment/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #     - gemini
  #   restart: unless-stopped
  #   mem_limit: 64m
  #   networks:
  #     - nasa-zeus-network

networks:
  nasa-zeus-network:
    driver: bridge

volumes:
  data:
  ssl:
